package geekbrains.hw_1_2;

public class Hw_1_2 {

    // 1. Задание
    // Задать целочисленный массив, состоящий из элементов 0 и 1.
    // Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    // С помощью цикла и условия заменить 0 на 1, 1 на 0.

    public static void main(String[] args) {
        int [] arrOI = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
        for (int i = 0; i < arrOI.length; i++) {        //прохожу циклом по каждому элементу массива
            if (arrOI[i] == 0) {                        //сравниваю с 0
                arrOI[i] = 1;                           //если 0 - меняю на 1
            } else {
                arrOI[i] = 0;                           //в противном случае меняю на 0
            }
            System.out.println(arrOI[i]);               //печатаю новый элемент массива после каждого цикла
        }
    }

    // 2. Задание
    // Задать пустой целочисленный массив размером 8.
    // С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21.

    public static void main(String[] args) {
        int [] arr = new int[8];                        //создал пустой целочисленный массив размером 8
        for (int i = 0; i < arr.length ; i++) {         //прохожу циклом по каждому элемента массива
            arr[i] = i * 3;                             //кладу в каждый элемент значения в соответствии с формулой
            System.out.println(arr[i]);                 //печатаю новый элемент массива после каждого цикла
        }
    }

    // 3. Задание
    // Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ]
    // пройти по нему циклом, и числа меньшие 6 умножить на 2.

    public static void main(String[] args) {
        int [] arrNum = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};  //задал требуемый массив
        for (int i = 0; i < arrNum.length; i++) {               //прохожу циклом по каждому элемента массива
            if (arrNum[i] < 6){                                 //ввожу условие для отбора элементов
                arrNum[i] = arrNum[i] * 2;                      //выбранный по условию элемент массива умножаю на 2
            }
            System.out.println(arrNum[i]);                      //печатаю элемент массива после каждого цикла
        }
    }

    // 4. Задание
    // Создать квадратный двумерный целочисленный массив (количество строк и столбцов
    //одинаковое), и с помощью цикла(-ов) заполнить его диагональные элементы единицами.

    public static void main(String[] args) {
        int [] [] arrQuad = new int [17][17];                   //создал двумерный массив
        for (int i = 0; i < arrQuad.length ; i++) {             //цикл по одной стороне квадрата
            for (int j = 0; j < arrQuad.length; j++) {          //цикл по второй стороне квадрата
                if (i == j){                                    //условие для диагонали "СЗ-ЮВ"
                    arrQuad[i][j] = 1;                          //эти элементы 1
                } else if (i + j == arrQuad.length - 1){        //условие для диагонали "СВ-ЮЗ"
                    arrQuad[i][j] = 1;                          //эти элементы тоже 1
                }
                System.out.printf("%4d", arrQuad[i][j]);        //печать с форматированием
            }
            System.out.println();                               //печать
        }
    }

    // 5. Задание
    //** Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета).

    public static void main(String[] args) {
        int [] arrMinMax = {1, 5, -3, 2, 11, -25, 9, 114, 4, 11, 9, 53}; //создал массив
        int max = arrMinMax[0];                                        //начальное значение для мах
        int min= arrMinMax[0];                                         //начальное значение для min
        for (int i = 0; i < arrMinMax.length; i++) {                   //цикл по элементам массива
            if (arrMinMax[i] > max){                                   //сравниваю
                max = arrMinMax[i];                                    //если нашел по условию, то заменяю
            } else if (arrMinMax[i] < min){                            //сравниваю
                min = arrMinMax[i];                                    //если нашел по условию, то заменяю
            }
        }
        System.out.println("Максимальное число в массиве " + max );    //печать
        System.out.println("Минимальное число в массиве " + min);      //печать
    }

}
